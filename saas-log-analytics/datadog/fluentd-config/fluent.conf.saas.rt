<source>
  @type tail
  @id artifactory_request_tail
  path "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/*artifactory-request*.log"
  pos_file "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/artifactory-request.log.pos"
  tag jfrog.saas.rt.artifactory.request
  read_from_head true
  refresh_interval 10
  follow_inodes true
  skip_refresh_on_startup true
  read_bytes_limit_per_second 104857600
  <parse>
    @type regexp
    expression ^(?<timestamp>[^ ]*)\|(?<trace_id>[^\|]*)\|(?<remote_address>[^\|]*)\|(?<username>[^\|]*)\|(?<request_method>[^\|]*)\|(?<request_url>[^\|]*)\|(?<return_status>[^\|]*)\|(?<response_content_length>[^\|]*)\|(?<request_content_length>[^\|]*)\|(?<request_duration>[^\|]*)\|(?<request_user_agent>.+)$
  </parse>
</source>
<filter jfrog.saas.rt.artifactory.request>
  @type record_transformer
  enable_ruby true
  <record>
    repo ${record["request_url"].include?("/api/docker") && !record["request_url"].include?("/api/docker/null") && !record["request_url"].include?("/api/docker/v2") ? (record["request_url"].split('/')[3]) : ("")}
    image ${record["request_url"].include?("/api/docker") && !record["request_url"].include?("/api/docker/null") && !record["request_url"].include?("/api/docker/v2")  ? (record["request_url"].split('/')[5]) : ("")}
  </record>
</filter>

<source>
  @type tail
  @id access_request_tail
  path "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/*access-request*.log"
  pos_file "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/access-request.log.pos"
  tag jfrog.saas.rt.access.request
  read_from_head true
  refresh_interval 10
  follow_inodes true
  skip_refresh_on_startup true
  read_bytes_limit_per_second 104857600
  <parse>
    @type regexp
    expression ^(?<timestamp>[^ ]*)\|(?<trace_id>[^\|]*)\|(?<remote_address>[^\|]*)\|(?<username>[^\|]*)\|(?<request_method>[^\|]*)\|(?<request_url>[^\|]*)\|(?<return_status>[^\|]*)\|(?<response_content_length>[^\|]*)\|(?<request_content_length>[^\|]*)\|(?<request_duration>[^\|]*)\|(?<request_user_agent>.+)$
  </parse>
</source>

<source>
  @type tail
  @id access_security_audit_tail
  path "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/*access-security-audit*.log"
  pos_file "#{ENV['JF_PRODUCT_SAAS_DATA']}/artifactory/access-security-audit.log.pos"
  tag jfrog.saas.rt.access.audit
  read_from_head true
  refresh_interval 10
  follow_inodes true
  skip_refresh_on_startup true
  read_bytes_limit_per_second 104857600
  <parse>
    @type regexp
    expression /^(?<timestamp>[^ ]*)\|(?<token_id>[^ ]*)\|(?<user_ip>[^ ]*)\|(?<user>[^ ]*)\|(?<logged_principal>[^ ]*)\|(?<entity_name>[^ ]*)\|(?<event_type>[^ ]*)\|(?<event>[^ ]*)\|(?<data_changed>.*)/
  </parse>
</source>

<filter jfrog.saas.rt.artifactory.request>
  @type record_transformer
  enable_ruby true
  <record>
    response_content_length_2 ${record["response_content_length"].to_f}
    request_content_length_2 ${record["request_content_length"].to_f}
  </record>
</filter>

<filter jfrog.saas.**>
  @type record_transformer
  enable_ruby true
  <record>
    instance "jfrog_cloud"
    hostname "jfrog.io"
    log_source ${tag}
    timestamp ${Time.now.iso8601}
  </record>
</filter>

## post testing restore this line : timestamp ${Time.parse(record["timestamp"],"%Y-%m-%dT%H:%M:%S.%LZ").iso8601}

####################
# DATADOG OUTPUT
####################
<match jfrog.saas.**>
  @type copy
  <store>
    @type datadog
    @id datadog_agent_jfrog_saas
    api_key "#{ENV['DATADOG_API_KEY']}"
    include_tag_key true
    dd_source jfrog_saas
    timestamp_key timestamp
    <buffer>
      @type memory
      flush_thread_count 5
      flush_interval 5s
    </buffer>
  </store>
</match>
